#region <MYJAYME> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>~~>|
#_______________________________________________________/
# SCOPE                                                 \
# The intent for this project is to create a small, helicopter-view adventure game with the following:
#   1)  Characters
#   2)  Quests
#   3)  Locations
#   4)  Procedurally Generated Dungeons - Adventure Zones
#   5)  Enemies
#   6)  Stats
#   7)  Souls-lite combat
#   8)  Spells
#________________________________________________________|
# GOALS (SHORT TERM)                                     |
# 1) Character
# 2) Movement
# 3) Face Cursor
#________________________________________________________|
# STRETCH GOAL                                          /
# 4) One or more of the following:
#    1) Item Pickups
#    2) Enemies
#    3) Maps
#______________________________________________________\
#_______________________________________________________\
#________________________________________________________\
#________________________________________________________/
#region <IMPORTS> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>~~>/
#______________________________________________________/
# PYGAME                                               \
import pygame
#_______________________________________________________|
# SYSTEM KEYS                                           |
from pygame.locals import *
#_______________________________________________________|
# PLAYER                                                |
from Assets.player_char import PlayerChar
#______________________________________________________/
#endregion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
# <IMPORTS> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>~~>\
#region <GLOBAL> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>~~>/
#______________________________________________________/
#                                                      \
#______________________________________________________/
#region <FUNCTIONS> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>~~>/
#______________________________________________________
# DRAW GRID                                            \
def draw_grid(g_col, g_row, grid_size, x_gap, y_gap):
    #__________________________________________________|
    # GRID LAYOUT                                      |
    for y in range(g_row):
        for x in range(g_col):
            pygame.draw.rect(
                window,
                dark_gray,
                [
                    x * grid_size + x_gap,
                    y * grid_size + y_gap,
                    grid_size,
                    grid_size
                ],
                1
            )
#______________________________________________________/
#endregion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
# <FUNCTIONS> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>~~>\
#______________________________________________________/
# CONSTANTS                                            \
WINDOW_X, WINDOW_Y = (800, 600)
#_______________________________________________________|
# INITIALIZE                                            |
pygame.init()
#______________________________________________________/
#region <WINDOW>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>~~>/
#____________________________________________________
# DIMESIONS                                          \
window = pygame.display.set_mode((WINDOW_X, WINDOW_Y))
#_____________________________________________________|
# TITLE                                               |
pygame.display.set_caption('My Jayme')
#____________________________________________________/
#endregion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
# <WINDOW> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>~~>\
#region <VARIABLES> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>~~>/
#____________________________________________________/
# COLORS                                             \
black = (0, 0, 0)
white = (255, 255, 255)
gray = (128, 128, 128)
dark_gray = (64, 64, 64)
red = (255, 0, 0)
green = (0, 255, 0)
blue = (0, 0, 255)
#_____________________________________________________|
# GRID                                                |
grid_size = 50
g_col = window.get_width() // grid_size
g_row = window.get_height() // grid_size
x_gap = (window.get_width() - g_col * grid_size) // 2
y_gap = (window.get_height() - g_row * grid_size) // 2
#_____________________________________________________|
# GLOBAL POS                                          |
x = 0
y = 0
#_____________________________________________________|
# CLOCK                                               |
clock = pygame.time.Clock()
#_____________________________________________________|
# POWER STATE                                         |
is_off = False
#____________________________________________________/
#endregion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
# <VARIABLES> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>~~>\
#region <PLAYER> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>~~>/
#____________________________________________________/
# HEAD                                               \
circle_x = WINDOW_X // 2
circle_y = WINDOW_Y // 2
radius = 20
player = PlayerChar(circle_x, circle_y, radius, white)
#____________________________________________________/
#endregion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
# <PLAYER> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>~~>\
#endregion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
# <GLOBAL> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>~~>\
#region <APPLICATION> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>~~>/
#______________________________________________________
# GAME LOOP                                            \
while not is_off:
    #___________________________________________________|
    # FRAME RATE                                        |
    dt = clock.tick(60)
    #___________________________________________________|
    # WINDOW                                           /
    #_________________________________________________/
    # BACKGROUND                                      \
    # window.fill((0, 0, 0))
    #_________________________________________________/
    # BORDER OBJECT                                   \
    # border_rect = pygame.Rect(5, 5, (WINDOW_X - 10), (WINDOW_Y - 10))
    #_________________________________________________/
    # BORDER RENDER                                   \
    # pygame.draw.rect(window, white, border_rect, 5)
    #_________________________________________________/
    # QUIT FUNCTIONALITY                              \
    for e in pygame.event.get():
        if e.type == pygame.QUIT:
            is_off = True
    #_________________________________________________/
    #_________________________________________________\
    #__________________________________________________\
    #___________________________________________________|
    # PLAYER                                           /
    #_________________________________________________/
    # INPUTS                                          \
    pressed = pygame.key.get_pressed()
    mouse_x, mouse_y = pygame.mouse.get_pos()
    #_________________________________________________/
    # MOVEMENT                                        \
    player.player_movement(pressed, WINDOW_X, WINDOW_Y)
    #_________________________________________________/
    # LOOK                                            \
    player.player_turning(mouse_x, mouse_y)
    #_________________________________________________/
    #_________________________________________________\
    #__________________________________________________\
    #___________________________________________________|
    # CLEAR SCREEN                                      |
    window.fill(black)    
    #___________________________________________________|
    # RENDER GRID                                       |
    draw_grid(g_col, g_row, grid_size, x_gap, y_gap)
    #___________________________________________________|
    # MODEL RENDERING                                   |
    player.player_model(window)
    #___________________________________________________|
    # BORDER                                           /
    #_________________________________________________/
    # DIMENSIONS                                      \
    border_rect = pygame.Rect(2, 2, (WINDOW_X - 2), (WINDOW_Y - 2))
    #_________________________________________________/
    # RENDER                                          \
    pygame.draw.rect(window, white, border_rect, 1)
    #_________________________________________________/
    #_________________________________________________\
    #__________________________________________________\
    #___________________________________________________|
    # REFRESH PER FRAME                                 |
    pygame.display.update()
    #__________________________________________________/
#______________________________________________________\
#______________________________________________________/
#region <QUIT> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>~~>/
#____________________________________________________
#                                                    \
pygame.quit()
#____________________________________________________/
#endregion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
# <QUIT> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>~~>\
#endregion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
# <APPLICATION> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>~~>\
#endregion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
# <MYJAYME> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>~~>|